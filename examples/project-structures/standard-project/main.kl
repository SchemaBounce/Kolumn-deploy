# Standard Project - Main Resource Configuration
# All resources are defined here using variables from variables.kl

# Core application tables
create "postgres_table" "users" {
  column "id" {
    type        = "UUID"
    primary_key = true
    default     = "gen_random_uuid()"
  }

  column "username" {
    type     = "VARCHAR(50)"
    nullable = false
    unique   = true
  }

  column "email" {
    type     = "VARCHAR(255)"
    nullable = false
    unique   = true
  }

  column "password_hash" {
    type     = "VARCHAR(255)"
    nullable = false
  }

  column "created_at" {
    type    = "TIMESTAMP"
    default = "NOW()"
  }

  column "updated_at" {
    type    = "TIMESTAMP"
    default = "NOW()"
  }

  # Add environment-specific configuration
  schema = var.environment == "prod" ? "public" : var.environment
}

create "postgres_table" "posts" {
  column "id" {
    type        = "UUID"
    primary_key = true
    default     = "gen_random_uuid()"
  }

  column "title" {
    type     = "VARCHAR(200)"
    nullable = false
  }

  column "content" {
    type = "TEXT"
  }

  column "author_id" {
    type     = "UUID"
    nullable = false
  }

  column "status" {
    type    = "VARCHAR(20)"
    default = "draft"
  }

  column "created_at" {
    type    = "TIMESTAMP"
    default = "NOW()"
  }

  column "updated_at" {
    type    = "TIMESTAMP"
    default = "NOW()"
  }

  schema = var.environment == "prod" ? "public" : var.environment
}

# Foreign key relationship
create "postgres_foreign_key" "posts_author_fk" {
  table              = postgres_table.posts
  columns            = ["author_id"]
  referenced_table   = postgres_table.users
  referenced_columns = ["id"]
  on_delete          = "CASCADE"
  on_update          = "CASCADE"
}

# Indexes for performance
create "postgres_index" "idx_users_email" {
  table   = postgres_table.users
  columns = ["email"]
  unique  = true
}

create "postgres_index" "idx_posts_author" {
  table   = postgres_table.posts
  columns = ["author_id"]
}

create "postgres_index" "idx_posts_status" {
  table   = postgres_table.posts
  columns = ["status"]
}

# Redis cache configuration
create "redis_key" "user_sessions" {
  pattern = "session:*"
  ttl     = 3600 # 1 hour
}

create "redis_key" "post_cache" {
  pattern = "post:*"
  ttl     = 300 # 5 minutes
}
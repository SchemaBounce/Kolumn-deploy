# Data Platform - Provider Configuration
# Comprehensive data platform with multiple data sources and streaming

# Core governance provider (always loaded first)
provider "kolumn" {
  # Universal governance and classification system
  governance_enabled = true
  audit_logging      = var.enable_audit_logging
  encryption_level   = var.encryption_level
}

# Primary analytical database
provider "postgres" {
  host     = var.postgres_host
  port     = var.postgres_port
  database = var.postgres_database
  username = var.postgres_username
  password = var.postgres_password

  # Enhanced security settings
  ssl_mode                    = "require"
  max_connections             = var.postgres_max_connections
  connection_timeout          = 30
  idle_in_transaction_timeout = 300
}

# Data warehouse
provider "snowflake" {
  account   = var.snowflake_account
  username  = var.snowflake_username
  password  = var.snowflake_password
  warehouse = var.snowflake_warehouse
  database  = var.snowflake_database
  schema    = var.snowflake_schema
  role      = var.snowflake_role
}

# Real-time streaming platform
provider "kafka" {
  brokers           = var.kafka_brokers
  security_protocol = var.kafka_security_protocol
  sasl_mechanism    = var.kafka_sasl_mechanism
  sasl_username     = var.kafka_username
  sasl_password     = var.kafka_password

  # Schema registry integration
  schema_registry_url = var.schema_registry_url
  schema_registry_auth = {
    username = var.schema_registry_username
    password = var.schema_registry_password
  }
}

# Document/NoSQL storage
provider "mongodb" {
  connection_string = var.mongodb_connection_string
  database          = var.mongodb_database

  # Replica set configuration
  replica_set     = var.mongodb_replica_set
  read_preference = "secondaryPreferred"
}

# Object storage for data lake
provider "s3" {
  region     = var.aws_region
  access_key = var.aws_access_key
  secret_key = var.aws_secret_key

  # Default encryption
  server_side_encryption = "AES256"
}
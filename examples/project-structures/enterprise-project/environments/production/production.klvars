# Production Environment Variables
# High-security, high-performance configuration for production workloads

# === ENVIRONMENT CONFIGURATION ===
environment = "production"
workspace = "prod"

# === SCALING AND PERFORMANCE ===
scaling_config = {
  min_instances = 3
  max_instances = 50
  target_cpu_percent = 70
  scale_up_cooldown_minutes = 5
  scale_down_cooldown_minutes = 15
  enable_predictive_scaling = true
}

# === SECURITY AND COMPLIANCE ===
compliance_level = "strict"
encryption_level = "maximum"

security_config = {
  enable_waf = true
  enable_ddos_protection = true
  enable_intrusion_detection = true
  enable_vulnerability_scanning = true
  enable_secrets_scanning = true
  enable_container_scanning = true
  security_group_lockdown = true
  vpn_required = true
  mfa_required = true
  session_recording_enabled = true
}

# === DATA GOVERNANCE ===
enable_audit_logging = true
enable_policy_enforcement = true

data_retention_policy = {
  pii_retention_days = 2557        # 7 years for GDPR compliance
  financial_retention_days = 3653  # 10 years for SOX compliance
  general_retention_days = 1095    # 3 years for business data
  audit_log_retention_days = 2557  # 7 years for compliance
}

# === DATABASE CONFIGURATIONS ===
postgres_config = {
  host = "prod-postgres-cluster.internal"
  port = 5432
  database = "kolumn_prod"
  username = "kolumn_prod_user"
  password = "${env.POSTGRES_PROD_PASSWORD}"
  
  instance_class = "db.r6g.4xlarge"
  multi_az = true
  backup_retention_days = 35
  backup_window = "03:00-04:00"
  maintenance_window = "Sun:04:00-Sun:05:00"
  performance_insights_enabled = true
  monitoring_interval = 60
  
  ssl_mode = "require"
  connection_pool_size = 100
  statement_timeout = "60s"
  idle_timeout = "300s"
}

snowflake_config = {
  account = "enterprise-prod"
  username = "KOLUMN_PROD_USER" 
  password = "${env.SNOWFLAKE_PROD_PASSWORD}"
  database = "KOLUMN_PROD"
  warehouse = "KOLUMN_PROD_WH"
  role = "KOLUMN_PROD_ROLE"
  
  warehouse_size = "X-LARGE"
  auto_suspend = 300  # 5 minutes
  min_cluster_count = 2
  max_cluster_count = 10
  scaling_policy = "ECONOMY"
}

mongodb_config = {
  cluster_name = "prod-mongodb-cluster"
  cluster_tier = "M40"  # High-performance cluster
  provider_instance_size = "M40"
  cloud_provider = "AWS"
  region = "us-east-1"
  
  disk_size_gb = 500
  backup_enabled = true
  auto_scaling_enabled = true
  connection_string = "${env.MONGODB_PROD_CONNECTION_STRING}"
  
  replica_set_count = 3
  shard_count = 2
  encryption_at_rest = "AWS"
}

# === STREAMING CONFIGURATION ===
kafka_config = {
  cluster_name = "prod-streaming-platform"
  kafka_version = "3.5"
  num_brokers = 6
  broker_instance_type = "kafka.m5.2xlarge"
  storage_per_broker = 1000  # GB
  
  encryption_in_transit = "TLS"
  encryption_at_rest = "AES-256"
  
  monitoring = {
    jmx_exporter_enabled = true
    cloudwatch_logs_enabled = true
    prometheus_metrics_enabled = true
  }
  
  client_authentication = "TLS_PLAINTEXT"
  configuration_overrides = {
    "auto.create.topics.enable" = "false"
    "default.replication.factor" = "3"
    "min.insync.replicas" = "2"
    "unclean.leader.election.enable" = "false"
    "log.retention.hours" = "168"  # 7 days
    "log.segment.bytes" = "1073741824"  # 1GB
    "num.partitions" = "24"
  }
}

# === INFRASTRUCTURE ===
aws_config = {
  region = "us-east-1"
  availability_zones = ["us-east-1a", "us-east-1b", "us-east-1c"]
  
  vpc_cidr = "10.0.0.0/16"
  private_subnet_cidrs = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]
  public_subnet_cidrs = ["10.0.101.0/24", "10.0.102.0/24", "10.0.103.0/24"]
  
  enable_nat_gateway = true
  enable_vpc_flow_logs = true
  enable_dns_hostnames = true
  enable_dns_support = true
}

# === BACKUP AND DISASTER RECOVERY ===
backup_config = {
  backup_retention_days = 35
  enable_cross_region_backup = true
  disaster_recovery_region = "us-west-2"
  backup_schedule = "0 2 * * *"  # Daily at 2 AM
  
  # RPO/RTO targets for production
  rpo_minutes = 15  # Maximum 15 minutes of data loss
  rto_minutes = 60  # Maximum 1 hour recovery time
  
  backup_encryption_enabled = true
  backup_storage_class = "STANDARD_IA"
}

# === MONITORING AND ALERTING ===
monitoring_config = {
  alert_email = "alerts-prod@company.com"
  slack_webhook_url = "${env.SLACK_PROD_WEBHOOK}"
  pagerduty_integration_key = "${env.PAGERDUTY_PROD_KEY}"
  
  enable_detailed_monitoring = true
  metric_collection_interval = 60
  log_retention_days = 90
  
  critical_alert_threshold = 0.99  # 99% availability SLA
  warning_alert_threshold = 0.95
  
  dashboard_refresh_interval = "5m"
  enable_synthetic_monitoring = true
}

# === FEATURE FLAGS ===
feature_flags = {
  enable_machine_learning = true
  enable_real_time_processing = true
  enable_advanced_analytics = true
  enable_data_lineage_tracking = true
  enable_auto_scaling = true
  enable_cost_optimization = true
  enable_disaster_recovery_testing = true
}

# === PROVIDER VERSIONS ===
provider_version_constraints = {
  postgres = "~> 2.1"
  snowflake = "~> 0.95"
  kafka = "~> 3.0"
  mongodb = "~> 1.8"
  s3 = "~> 6.0"
  redis = "~> 3.2"
}

# === ORGANIZATIONAL METADATA ===
organization = "Enterprise Corp"
team = "Data Platform Engineering"
cost_center = "CC-12345"
project_name = "enterprise-data-platform"
timezone = "UTC"

# === TAGS ===
common_tags = {
  Environment = "production"
  Project = "enterprise-data-platform" 
  Organization = "Enterprise Corp"
  Team = "Data Platform Engineering"
  CostCenter = "CC-12345"
  Compliance = "strict"
  BackupRequired = "true"
  MonitoringLevel = "enhanced"
  DataClassification = "confidential"
  ManagedBy = "kolumn"
}
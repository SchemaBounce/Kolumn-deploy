# Enterprise Project - Development Environment
# Development-specific variable values optimized for cost and agility

# === ENVIRONMENT CONFIGURATION ===
environment = "development"
workspace = "dev"
project_name = "enterprise-data-platform"
organization = "enterprise-corp"
team = "data-platform-engineering"
cost_center = "engineering-dev"
compliance_level = "basic"

# === GOVERNANCE SETTINGS ===
enable_audit_logging = false  # Disabled for dev to reduce costs
encryption_level = "basic"
enable_policy_enforcement = false  # Relaxed for development flexibility

data_retention_policy = {
  pii_retention_days       = 30   # Short retention for dev
  financial_retention_days = 30
  audit_log_retention_days = 7
  general_retention_days   = 30
}

timezone = "America/Los_Angeles"  # Team timezone

# === STATE BACKEND ===
state_backend_type = "local"  # Local state for development
state_backend_config = {
  path = "./.kolumn/terraform.tfstate"
}

# === POSTGRESQL CONFIGURATION ===
postgres_config = {
  host            = "localhost"
  port            = 5432
  database        = "enterprise_dev"
  username        = "dev_user"
  password        = "dev_password_123"
  max_connections = 20
  timeout         = 30
  pool_min        = 2
  pool_max        = 10
  backup_retention = 1  # Minimal backup for dev
}

# === SNOWFLAKE CONFIGURATION ===
snowflake_config = {
  account        = "xy12345.us-west-2.aws"
  username       = "DATAENG_DEV_USER"
  password       = "dev_snowflake_password"
  warehouse      = "DEV_WH"
  database       = "ENTERPRISE_DEV"
  default_schema = "PUBLIC"
  role           = "DATA_ENGINEER_DEV"
  query_timeout  = 300
  auto_suspend   = 60  # Aggressive auto-suspend for cost savings
}

# === KAFKA CONFIGURATION ===
kafka_config = {
  brokers                   = ["localhost:9092"]
  security_protocol         = "PLAINTEXT"  # No security for dev
  sasl_mechanism           = "PLAIN"
  username                 = "dev_kafka"
  password                 = "dev_kafka_password"
  ssl_ca_cert              = null
  ssl_cert                 = null
  ssl_key                  = null
  schema_registry_url      = "http://localhost:8081"
  schema_registry_username = "dev_registry"
  schema_registry_password = "dev_registry_password"
}

# === MONGODB CONFIGURATION ===
mongodb_config = {
  connection_string = "mongodb://dev_user:dev_password@localhost:27017/enterprise_dev?replicaSet=rs0"
  database         = "enterprise_dev"
  replica_set      = "rs0"
  read_preference  = "primary"
  write_concern    = "majority"
  max_pool_size    = 10
  min_pool_size    = 1
  auth_source      = "admin"
  tls_ca_file      = null
}

# === AWS CONFIGURATION ===
aws_config = {
  region                 = "us-west-2"
  access_key            = "AKIA_DEV_ACCESS_KEY_ID"
  secret_key            = "dev_secret_access_key_value"
  assume_role_arn       = null  # No role assumption in dev
  kms_key_id           = "arn:aws:kms:us-west-2:123456789012:key/dev-key-id"
  backup_region        = "us-east-1"
  elasticsearch_role_arn = null
}

# === AZURE CONFIGURATION (DISABLED) ===
azure_config = {
  storage_account_name = ""
  storage_account_key  = ""
  environment         = "AzurePublicCloud"
  tenant_id           = ""
  replication_type    = "LRS"  # Cheapest option for dev
}

multi_cloud_enabled = false  # Single cloud for dev simplicity

# === REDIS CONFIGURATION ===
redis_config = {
  host            = "localhost"
  port            = 6379
  password        = "dev_redis_password"
  database        = 0
  cluster_enabled = false  # Single instance for dev
  cluster_nodes   = null
  pool_size       = 5
  dial_timeout    = 5
  read_timeout    = 3
  tls_ca_cert     = null
  tls_cert_file   = null
  tls_key_file    = null
}

# === ELASTICSEARCH CONFIGURATION ===
elasticsearch_config = {
  urls             = ["http://localhost:9200"]
  username         = "dev_elastic"
  password         = "dev_elastic_password"
  cloud_id         = null
  api_key          = null
  default_shards   = 1  # Single shard for dev
  default_replicas = 0  # No replicas for dev
  refresh_interval = "5s"
  snapshot_bucket  = null  # No snapshots in dev
}

# === AIRFLOW CONFIGURATION ===
airflow_config = {
  host           = "localhost"
  port           = 8080
  username       = "dev_airflow"
  password       = "dev_airflow_password"
  base_url       = "http://localhost:8080"
  dag_repository = "https://github.com/enterprise-corp/airflow-dags.git"
  dag_branch     = "develop"
  sync_interval  = "300s"
}

# === NETWORKING CONFIGURATION ===
network_config = {
  vpc_cidr           = "10.0.0.0/16"
  private_subnets    = ["10.0.1.0/24", "10.0.2.0/24"]
  public_subnets     = ["10.0.101.0/24", "10.0.102.0/24"]
  availability_zones = ["us-west-2a", "us-west-2b"]
  enable_nat_gateway = false  # No NAT gateway for dev cost savings
  enable_vpn_gateway = false
  dns_servers        = ["10.0.0.2"]
}

# === SECURITY CONFIGURATION ===
security_config = {
  enable_waf               = false  # Disabled for dev
  enable_ddos_protection   = false
  ssl_certificate_arn      = null
  allowed_cidr_blocks      = ["10.0.0.0/8", "0.0.0.0/0"]  # More open for dev
  enable_intrusion_detection = false
  log_retention_days       = 7   # Short retention
  enable_vulnerability_scanning = false
}

# === MONITORING CONFIGURATION ===
monitoring_config = {
  enable_prometheus     = true   # Keep monitoring even in dev
  enable_grafana       = true
  enable_elk_stack     = false  # Disabled for cost
  alert_email          = "dev-team@enterprise-corp.com"
  slack_webhook_url    = null
  pagerduty_token     = null
  metrics_retention_days = 7   # Short retention
  log_retention_days   = 3
}

# === BACKUP CONFIGURATION ===
backup_config = {
  enable_cross_region_backup = false  # No cross-region for dev
  backup_retention_days      = 3      # Minimal retention
  snapshot_frequency         = "daily"
  enable_point_in_time_recovery = false
  disaster_recovery_region   = "us-east-1"
  rto_minutes               = 1440  # 24 hours (relaxed for dev)
  rpo_minutes               = 60    # 1 hour
}

# === SCALING CONFIGURATION ===
scaling_config = {
  enable_auto_scaling      = false  # Fixed sizing for dev
  min_capacity            = 1
  max_capacity            = 2       # Very limited scaling
  target_cpu_utilization  = 80
  target_memory_utilization = 85
  scale_up_cooldown       = 600     # 10 minutes
  scale_down_cooldown     = 900     # 15 minutes
}

# === FEATURE FLAGS ===
feature_flags = {
  enable_advanced_analytics = false  # Basic features only
  enable_real_time_processing = true
  enable_machine_learning   = false
  enable_data_lineage      = false
  enable_automated_governance = false
  enable_cost_optimization = false
  enable_performance_tuning = false
}
# Complete Output System Example for Kolumn
# This demonstrates the fully implemented output system with create block references, 
# variables, and state integration

# Variables for configuration
variable "environment" {
  type        = string
  description = "Environment name"
  default     = "development"
}

variable "database_port" {
  type        = number
  description = "Database port number"
  default     = 5432
}

variable "enable_ssl" {
  type        = bool
  description = "Enable SSL for database connections"
  default     = false
}

# Create blocks that outputs can reference
create "postgres_table" "users" {
  schema = "public"
  name   = "users"

  column "id" {
    type        = "BIGSERIAL"
    primary_key = true
  }

  column "email" {
    type   = "VARCHAR(255)"
    unique = true
  }

  column "created_at" {
    type    = "TIMESTAMP"
    default = "CURRENT_TIMESTAMP"
  }
}

create "postgres_table" "orders" {
  schema = "public"
  name   = "orders"

  column "id" {
    type        = "BIGSERIAL"
    primary_key = true
  }

  column "user_id" {
    type       = "BIGINT"
    references = postgres_table.users.id
  }

  column "amount" {
    type = "DECIMAL(10,2)"
  }
}

create "postgres_index" "idx_users_email" {
  table   = postgres_table.users.name
  columns = ["email"]
  unique  = true
}

# Output examples demonstrating all capabilities

# 1. Simple variable-based output
output "environment" {
  description = "Current environment"
  value       = var.environment
}

# 2. Computed output using variables  
output "database_url" {
  description = "Database connection URL"
  value       = format("postgresql://localhost:%d/myapp", var.database_port)
  sensitive   = false
}

# 3. SSL configuration output
output "ssl_enabled" {
  description = "Whether SSL is enabled"
  value       = var.enable_ssl
}

# 4. Create block reference outputs (available after apply)
output "users_table_name" {
  description = "Name of the users table"
  value       = postgres_table.users.name
}

output "users_table_id" {
  description = "Full identifier of the users table"
  value       = postgres_table.users.id
}

# 5. Cross-resource references
output "orders_foreign_key" {
  description = "Foreign key reference from orders to users"
  value       = postgres_table.orders.user_id
}

# 6. Index information
output "email_index_name" {
  description = "Name of the email index"
  value       = postgres_index.idx_users_email.name
}

# 7. Sensitive output example
output "database_credentials" {
  description = "Database connection credentials"
  sensitive   = true
  value = {
    host     = "localhost"
    port     = var.database_port
    database = "myapp"
    ssl      = var.enable_ssl
  }
}

# 8. Complex computed output
output "table_summary" {
  description = "Summary of created tables"
  value = {
    users_table = {
      name   = postgres_table.users.name
      schema = postgres_table.users.schema
      type   = postgres_table.users.type
    }
    orders_table = {
      name   = postgres_table.orders.name
      schema = postgres_table.orders.schema
      type   = postgres_table.orders.type
    }
    total_tables = 2
    environment  = var.environment
  }
}

# 9. Conditional output
output "ssl_port_message" {
  description = "SSL configuration message"
  value       = var.enable_ssl ? format("SSL enabled on port %d", var.database_port) : format("SSL disabled on port %d", var.database_port)
}

# 10. List output with create block references
output "all_table_names" {
  description = "List of all table names"
  value = [
    postgres_table.users.name,
    postgres_table.orders.name
  ]
}